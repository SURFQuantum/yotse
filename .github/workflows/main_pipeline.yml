name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - '*'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up python 3.11 until pycln fix
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - uses: pre-commit/action@v3.0.0
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest]
        poetry-version: ["1.7.0"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        ref: ${{ github.head_ref }}
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
      # see details (matrix, python-version, python-version-file, etc.)
      # https://github.com/actions/setup-python
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry install
    - name: Run the automated tests (ignore deprecation errors )
      run: poetry run pytest -W ignore::DeprecationWarning --cov-report lcov --cov=yotse tests/
    - name: Run the examples (except nlblueprint)
      run: poetry run examples
    - name: Upload results to Coveralls (only on Python3.10 job)
      if: matrix.python-version == '3.10'
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
